{"version":3,"sources":["components/nav/Nav.jsx","components/home/Home.jsx","components/land/Land.jsx","components/park/Park.jsx","components/parks/Parks.jsx","components/experience/Exper.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav1","state","className","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","id","Link","Component","Home","class","Land","land","props","dining","this","match","params","location","console","log","setState","map","res","name","Park","park","Parks","showLands","visible","parks","lands","ind","showHide","pathname","onClick","Exper","posts","addedData","user","img","description","currentDateTime","addedDataHandler","event","key","target","value","Axios","get","then","data","substring","copyState","onSubmitHandler","preventDefault","push","Container","post","src","Form","onSubmit","FormGroup","controlId","FormLabel","FormControl","type","placeholder","onChange","as","rows","Button","variant","App","axios","orlando","filter","par","indexOf","path","component","Nav","exact","render","React","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf84fd08.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Nav.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { NavLink } from 'react-router-dom'\nimport {Nav} from 'react-bootstrap'\nimport {Navbar} from 'react-bootstrap'\n\nclass Nav1 extends Component {\n    state = {  }\n    render() { \n        return (        <div className=\"Nav topnav\">\n\n        <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand to=\"/\">Taste The Magic</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav.Link><NavLink to=\"/\">Home</NavLink></Nav.Link>\n        <Nav.Link><NavLink to=\"/Parks\">Parks</NavLink></Nav.Link>\n        <Nav.Link><NavLink to=\"/Exper\">Experiences</NavLink></Nav.Link>\n        </Navbar.Collapse>\n      </Navbar>\n      \n             \n              </div>);\n    }\n}\n \nexport default Nav1;","import React,{Component} from 'react';\nimport './Home.css';\nclass Home extends Component {\n    render() { \n        return (\n            <div className='Home'>\n    <div class=\"page-header\">\n    <div class=\"container\">\n    <div class=\"row\">\n    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n    <div class=\"page-caption\">\n    <h1 class=\"page-title\">Taste the magic...</h1>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div class=\"card-section\">\n    <div class=\"container\">\n    <div class=\"card-block bg-white mb30\">\n    <div class=\"row\">\n    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n    {/* section-title  */}\n    <div class=\"section-title mb-0\">\n    <h2 className='p1'>Looking for a great delightful meal at one of the iconic Disneyland restaurants?</h2>\n    <h3 className='p1'>We are here to help you enjoy the best experience</h3>\n    </div>\n    {/* /.section-title  */}\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n            </div> \n        );\n    }\n}\nexport default Home;","import React, { Component } from 'react';\nimport './Land.css';\nclass Land extends Component {\n    state = {\n        land:this.props.land,\n        dining:[]\n      }\n      componentDidMount () {\n        const land = this.props.match.params.id\n        let dining = this.props.location.state.dining\n        console.log(dining)\n        if(land===\"Animation Courtyard\" ||land===\"World Showcase\" ){dining=[]}\n        this.setState({ ...this.state,\n        land,dining})\n       }\n    render() { \n        return ( <div> \n            <div class=\"container\">\n  <div class=\"jumbotron\">\n  <h1>{this.state.land}</h1> \n  </div>\n            <br/>\n\t<div >\n            <p>{this.state.dining.map(res=> <blockquote class=\"quote-card\"><p>{res.name}</p></blockquote>)}</p>\n          </div> </div>\n        </div>  );\n    }\n}\nexport default Land;","import React, { Component } from 'react';\nimport Land from '../land/Land'\nimport './Park.css';\n\nclass Park extends Component {\n    state = {  }\n    render() { \n\n        return ( <p>\n       {this.props.park}\n        </p> );\n    }\n}\n \nexport default Park;","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './Parks.css';\nimport Park from '../park/Park'\nimport Land from '../land/Land'\nimport {Link} from 'react-router-dom'\nclass Parks extends Component {\n  constructor(props){\n    super(props)\n    this.state = {  \n        parks:this.props.parks,\n        park:this.props.park,\n        lands:this.props.lands,\n        ind:this.props.ind,\n        visible:false\n     }}\n\nshowLands= () => { \n\nthis.setState({ ...this.state,visible: !this.state.visible})\n\n}\n    render() { \n      // <li><h4>{res.name}</h4></li>\n      let showHide =\"\"\n      if(this.state.visible){\n      showHide = <ul>{this.state.lands.map((res)=><Link to={{\n        pathname: `/lands/${res.name}`,\n        state: {\n          dining: res.dining\n        }\n      }}><h3>{res.name}</h3></Link>)}</ul>\n      \n     }\n     else { showHide= \"\"\n\n   }\n \n  return ( <div >\n \n     {/* <h1 onClick={this.showLands} ><Park park={this.state.park}/></h1> */}\n  \n  \t<div className={`col-xl-3 col-lg-3 col-md-3 col-sm-3 project project-${this.state.ind} wow animated animated3 fadeInLeft parks-container`}>\n    \t<div onClick={this.showLands} className=\"project-hover\" >\n      \n  \n            <hr />\n     \n        </div>\n        <div  className=\"new\">\n        <h1  ><Park park={this.state.park}/></h1>\n        </div>\n        {showHide}\n    </div>\n    \n  </div> );\n    }\n}\n \nexport default Parks;","import React, {Component} from 'react';\nimport \"../experience/Exper.css\"\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { FormGroup } from 'react-bootstrap';\nimport { FormLabel} from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Container }from 'react-bootstrap';\nimport { Col }from 'react-bootstrap';\nimport Axios from 'axios';\nclass Exper extends Component {\n    state = { \n            posts: [],\n            addedData: {\n            user: \"\",\n            img: \"\",\n            description: \"\",\n            currentDateTime:\"\"\n          }\n       }\n  addedDataHandler = (event) => {\n    const key = event.target.name  //name in the input tage\n    const value = event.target.value // value that user enter in the input tag\n    Axios.get(\"http://worldclockapi.com/api/json/utc/now\")\n    .then(res=>{\n      let currentDateTime = res.data.currentDateTime.substring(0, 10);\n      this.setState(({...copyState}) => {\n        copyState.addedData[\"currentDateTime\"] = currentDateTime\n        return copyState\n        })\n    })\n    this.setState(({...copyState}) => {\n    copyState.addedData[key] = value\n    \n    return copyState\n    })\n  }\n    onSubmitHandler = event => {\n      event.preventDefault()\n  \n      this.setState(({...copyState}) => {\n      copyState.posts.push(copyState.addedData)\n      copyState.addedData = {\n      user: \"\",\n      img: \"\",\n      description: \"\"\n    } \n    return copyState \n    })\n  }\n      render() { \n      return ( \n        <Container>\n         {/* <Col xs lg=\"7\"> */}\n          <div className=\"container \"> \n          <div className=\"form\">\n          {this.state.posts.map(post => (\n          <div>\n          <h4>{post.user}</h4>\n          <p>{post.description}</p>\n          <p>Date: {post.currentDateTime}</p>\n          <img class=\"mw-100\" src={post.img} />\n          <hr/>\n          </div> \n          ))}\n          <Form onSubmit={this.onSubmitHandler} className=\"mar\">\n          <FormGroup controlId=\"formBasicEmail\">\n          <FormLabel> Name </FormLabel>\n          <FormControl\n          type=\"text\" \n          placeholder=\"Enter your name\" \n          name=\"user\"\n          value={this.state.addedData.user}\n          onChange={this.addedDataHandler} />\n          </FormGroup>\n          {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n          </Form.Text> */}\n          <FormGroup controlId=\"formBasicPassword\">\n          <FormLabel>Image</FormLabel>\n          <FormControl\n          type=\"text\" \n          placeholder=\"post your experience image\"\n          name=\"img\"\n          value={this.state.addedData.img}\n          onChange={this.addedDataHandler} />\n          </FormGroup>\n          <FormGroup controlId=\"formBasicPassword\">\n          <FormLabel> Share your magic</FormLabel>\n          <FormControl\n          // type=\"text\" \n          as=\"textarea\" rows=\"3\" \n          placeholder=\"write comment\"\n          name=\"description\"\n          value={this.state.addedData.description}\n          onChange={this.addedDataHandler}/>\n          </FormGroup>\n          <Button variant=\"primary\" type=\"submit\"> Post </Button>\n          </Form>\n          </div>\n          </div>\n          {/* </Col> */}\n      </Container>\n         );\n    }\n}\nexport default Exper;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/nav/Nav'\nimport Home from './components/home/Home'\n// import Park from './components/park/Park'\nimport Land from './components/land/Land'\nimport Parks from './components/parks/Parks'\nimport Exper from './components/experience/Exper'\n// import Dining from './components/dining/Dining'\nimport axios from 'axios';\nclass App extends React.Component{\n state ={\n   parks:[]\n }\n  componentDidMount() {\n    // axios\naxios.get(`https://disneyparksapi.firebaseio.com/.json`)\n.then(res => {\nlet parks = res.data.orlando.parks;\nparks = parks.filter(par => parks.indexOf(par)<4);\nthis.setState({ parks });\n})\n} \nrender(){\n  return (\n    <div className=\"App\">\n <Route path='/' component={ Nav }/>\n <Route exact path='/project-3-second/' component={ Home }/>\n <Route exact path='/Parks'  render={() => <div className=\"container-fluid\">{this.state.parks.map(res => <Parks parks={this.state.parks} park={res.name} lands={res.lands} ind={this.state.parks.indexOf(res)}/>)}</div>} />\n <Route exact path='/lands/:id'  render={(props) =>  <Land {...props} land={props.id}/>}/>\n <Route exact path='/Exper' component={ Exper }/>\n{/* \n<Experince/> */}\n    </div>\n  );\n}}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n    \n    ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}